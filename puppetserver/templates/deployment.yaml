apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "puppetserver.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "puppetserver.name" . }}
    helm.sh/chart: {{ include "puppetserver.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  {{- if not (.Values.autoScaling.enabled) }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "puppetserver.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "puppetserver.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- if .Values.serviceAccountName }}
      serviceAccountName: {{ .Values.serviceAccountName }}
      {{- end }}
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      {{ toYaml .values.imagePullSecrets | nindent  8 }}
      {{- end }}
      initContainers:
        {{- if .Values.gnupg.enabled }}
        - name: {{ .Chart.Name }}-gpg-import
          image: "centos:8"
          command: [
            "gpg",
            "--import",
            "--homedir",
            "/opt/puppetlabs/server/data/puppetserver/.gnupg",
            "/run/secrets/gpg.asc",
          ]
          volumeMounts:
            - mountPath: /run/secrets/gpg.asc
              name: secrets
              subPath: gpg.asc
            - mountPath: /opt/puppetlabs/server/data/puppetserver/.gnupg
              name: gnupgdir
          resources:
            {{- toYaml .Values.initContainers.gpgImport.resources | nindent 12 }}
        {{- end }}
        - name: {{ .Chart.Name }}-jmx-exporter
          image: camptocamp/jmx-exporter:0.12.0
          command: [ "cp", "/jmx_prometheus_javaagent-0.12.0.jar", "/jmx-exporter/" ]
          volumeMounts:
            - mountPath: /jmx-exporter
              name: jmx-exporter
          resources:
            {{- toYaml .Values.initContainers.jmxExporter.resources | nindent 12 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: [ "java" ]
          args: [
            "-Xms{{ .Values.java_mem_limit }}",
            "-Xmx{{ .Values.java_mem_limit }}",
            "-Djruby.logger.class=com.puppetlabs.jruby_utils.jruby.Slf4jLogger",
            "-Dlogappender=STDOUT",
            "-Djava.security.egd=/dev/urandom",
            "-javaagent:/jmx-exporter/jmx_prometheus_javaagent-0.12.0.jar=9080:/jmx-exporter/config.yaml",
            "-cp",
            "/opt/puppetlabs/server/apps/puppetserver/puppet-server-release.jar:/opt/puppetlabs/server/apps/puppetserver/jruby-1_7.jar:/opt/puppetlabs/puppet/lib/ruby/vendor_ruby/facter.jar:/opt/puppetlabs/server/data/puppetserver/jars/*",
            "clojure.main",
            "-m",
            "puppetlabs.trapperkeeper.main",
            "--config",
            "/etc/puppetlabs/puppetserver/conf.d",
            "--bootstrap-config",
            "/etc/puppetlabs/puppetserver/services.d/,/opt/puppetlabs/server/apps/puppetserver/config/services.d/",
            "--restart-file",
            "/opt/puppetlabs/server/data/puppetserver/restartcounter",
          ]
          env:
            - name: HOME
              value: /opt/puppetlabs/server/data/puppetserver
            - name: PUPPETSERVER_MAX_ACTIVE_INSTANCES
              value: {{ .Values.max_active_instances | quote }}
          ports:
            - name: http
              containerPort: 8140
              protocol: TCP
            - name: metrics
              containerPort: 9080
              protocol: TCP
          volumeMounts:
            - mountPath: /etc/puppetlabs/puppet
              name: confdir
            - mountPath: /var/log/puppetlabs
              name: logs
            - mountPath: /opt/puppetlabs/server/data/puppetserver/.puppetlabs/etc/puppet
              name: user-confdir
            {{- if .Values.gnupg.enabled}}
            - mountPath: /opt/puppetlabs/server/data/puppetserver/.gnupg
              name: gnupgdir
            {{- end }}
            - mountPath: /etc/puppetlabs/puppet/puppet.conf
              name: puppet
              subPath: puppet.conf
            - mountPath: /etc/puppetlabs/puppet/hiera.yaml
              name: puppet
              subPath: hiera.yaml
            - mountPath: /etc/puppetlabs/puppet/autosign.sh
              name: puppet
              subPath: autosign
            - mountPath: /etc/puppetlabs/puppet/puppetdb.conf
              name: puppet
              subPath: puppetdb.conf
            - mountPath: /etc/puppetlabs/puppet/routes.yaml
              name: puppet
              subPath: routes.yaml
            - mountPath: /etc/puppetlabs/puppetserver/conf.d/ca.conf
              name: puppetserver
              subPath: ca.conf
            - mountPath: /etc/puppetlabs/puppetserver/conf.d/auth.conf
              name: puppetserver
              subPath: auth.conf
            - mountPath: /etc/puppetlabs/puppetserver/logback.xml
              name: puppetserver
              subPath: logback.xml
            - mountPath: /etc/puppetlabs/puppetserver/request-logging.xml
              name: puppetserver
              subPath: request-logging.xml
            - mountPath: /etc/puppetlabs/code
              name: puppetcode
              readOnly: true
            - mountPath: /srv/puppetca
              name: puppetca
            - mountPath: /run/secrets/autosign_psk
              name: secrets
              subPath: autosign_psk
            - mountPath: /jmx-exporter
              name: jmx-exporter
            - mountPath: /jmx-exporter/config.yaml
              name: jmx-exporter-config
              subPath: config.yaml
          readinessProbe:
            httpGet:
              path: /status/v1/simple
              port: http
              scheme: HTTPS
              httpHeaders:
                - name: Accept
                  value: pson
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      securityContext:
        supplementalGroups:
          {{- toYaml .Values.securityContext.supplementalGroups | nindent 10 }}
        {{- if .Values.securityContext.runAsUser }}
        runAsUser: {{ .Values.securityContext.runAsUser }}
        {{- end }}
        {{- if .Values.securityContext.runAsGroup }}
        runAsGroup: {{ .Values.securityContext.runAsGroup }}
        {{- end }}
      volumes:
        - name: jmx-exporter
          emptyDir: {}
        - name: logs
          emptyDir: {}
        - name: confdir
          emptyDir: {}
        {{ if .Values.gnupg.enabled }}
        - name: gnupgdir
          emptyDir: {}
        {{- end }}
        - name: user-confdir
          configMap:
            name: {{ include "puppetserver.fullname" . }}-user-confdir
        - name: puppet
          configMap:
            name: {{ .Values.puppetConfigMap | default (printf "%s-puppet" (include "puppetserver.fullname" .)) }}
            items:
              - key: autosign
                path: autosign
                mode: 0755
              - key: puppet.conf
                path: puppet.conf
                mode: 0644
              - key: hiera.yaml
                path: hiera.yaml
                mode: 0644
              - key: puppetdb.conf
                path: puppetdb.conf
                mode: 0644
              - key: routes.yaml
                path: routes.yaml
                mode: 0644
        - name: puppetserver
          configMap:
            name: {{ .Values.puppetserverConfigMap | default (printf "%s-puppetserver" (include "puppetserver.fullname" .)) }}
        - name: puppetcode
          persistentVolumeClaim:
            claimName: {{ if eq "-" .Values.persistence.puppetcode.existingClaim }}{{ include "puppetserver.fullname" . }}-puppetcode{{- else }}{{ .Values.persistence.puppetcode.existingClaim }}{{- end }}
        - name: puppetca
          persistentVolumeClaim:
            claimName: {{ if eq "-" .Values.persistence.puppetca.existingClaim }}{{ include "puppetserver.fullname" . }}-puppetca{{- else }}{{ .Values.persistence.puppetca.existingClaim }}{{- end }}
        - name: secrets
          secret:
            secretName: {{ .Values.pskExistingSecret | default ( printf "%s" (include "puppetserver.fullname" . ))}}
        - name: jmx-exporter-config
          configMap:
            name: {{ include "puppetserver.fullname" . }}-jmx-exporter
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
