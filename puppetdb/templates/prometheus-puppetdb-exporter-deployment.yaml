{{ if .Values.prometheusPuppetdbExporter.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "prometheus-puppetdb-exporter.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "prometheus-puppetdb-exporter.name" . }}
    helm.sh/chart: {{ include "puppetdb.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "prometheus-puppetdb-exporter.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "prometheus-puppetdb-exporter.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      initContainers:
        - name: {{ .Chart.Name }}-autosign
          image: "docker.io/puppet/puppet-agent:5.5.1"
          command: ["sh", "-c"]
          args:
            - "psk=$(cat /run/secrets/autosign_psk); hostname=$(puppet config print certname | tr -d '\n'); echo \"custom_attributes:\n  1.2.840.113549.1.9.7: 'hashed;$(echo -n $psk/$hostname/puppetdb/production | openssl dgst -binary -sha256 | openssl base64)'\nextension_requests:\n  pp_role: 'puppetdb'\n  pp_environment: 'production'\" > /etc/puppetlabs/puppet/csr_attributes.yaml; puppet agent -t --noop --environment production --server puppetserver --dns_alt_names='{{ include "puppetdb.fullname" . }},{{ .Values.public_name }}' --waitforcert 60 --confdir /etc/puppetlabs/puppet; cd /etc/puppetlabs/puppet/ssl && cp private_keys/$hostname.pem private_keys/prometheus-puppetdb-exporter.pem && cp certs/$hostname.pem certs/prometheus-puppetdb-exporter.pem ; mv /etc/puppetlabs/puppet/ssl/* /srv/puppetssl/"
          env:
            - name: HOME
              value: /tmp
          volumeMounts:
            - mountPath: /run/secrets/autosign_psk
              name: secrets
              subPath: autosign_psk
            - mountPath: /etc/puppetlabs/puppet
              name: confdir
            - mountPath: /srv/puppetssl
              name: ssldir
      containers:
        - name: prometheus-puppetdb-exporter
          image: "{{ .Values.prometheusPuppetdbExporter.image.repository }}:{{ .Values.prometheusPuppetdbExporter.image.tag }}"
          ports:
            - name: metrics
              containerPort: 9121
              protocol: TCP
          env:
            - name: "PUPPETDB_URL"
              value: "https://puppetdb:8081/pdb/query"
            - name: PUPPETDB_KEY_FILE
              value: /etc/puppetlabs/puppet/ssl/private_keys/prometheus-puppetdb-exporter.pem
            - name: PUPPETDB_CERT_FILE
              value: /etc/puppetlabs/puppet/ssl/certs/prometheus-puppetdb-exporter.pem
            - name: PUPPETDB_CA_FILE
              value: /etc/puppetlabs/puppet/ssl/certs/ca.pem
            - name: "PUPPETDB_SCRAPE_INTERVAL"
              value: "{{ .Values.prometheusPuppetdbExporter.scrapeInterval }}"
            - name: "REPORT_METRICS_CATEGORIES"
              value: "{{ .Values.prometheusPuppetdbExporter.reportMetricsCategories }}"
          volumeMounts:
            - mountPath: /etc/puppetlabs/puppet/ssl
              name: ssldir
          resources:
            {{- toYaml .Values.prometheusPuppetdbExporter.resources | nindent 12 }}
      volumes:
        - name: confdir
          emptyDir: {}
        - name: ssldir
          emptyDir: {}
        - name: secrets
          secret:
            secretName: {{ include "puppetdb.fullname" . }}
      {{- with .Values.prometheusPuppetdbExporter.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.prometheusPuppetdbExporter.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.prometheusPuppetdbExporter.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{ end }}
