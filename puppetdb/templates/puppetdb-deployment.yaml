apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "puppetdb.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "puppetdb.name" . }}
    helm.sh/chart: {{ include "puppetdb.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.puppetdb.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "puppetdb.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "puppetdb.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      initContainers:
        - name: {{ .Chart.Name }}-autosign
          image: "docker.io/puppet/puppet-agent:5.5.1"
          command: ["sh", "-c"]
          args:
            - "psk=$(cat /run/secrets/autosign_psk); hostname=$(puppet config print certname | tr -d '\n'); echo \"custom_attributes:\n  1.2.840.113549.1.9.7: 'hashed;$(echo -n $psk/$hostname/puppetdb/production | openssl dgst -binary -sha256 | openssl base64)'\nextension_requests:\n  pp_role: 'puppetdb'\n  pp_environment: 'production'\" > /etc/puppetlabs/puppet/csr_attributes.yaml; puppet agent -t --noop --environment production --server puppetserver --dns_alt_names='{{ include "puppetdb.fullname" . }},{{ .Values.public_name }}' --waitforcert 60 --confdir /etc/puppetlabs/puppet; cd /etc/puppetlabs/puppet/ssl && cp private_keys/$hostname.pem private_keys/puppetdb.pem && cp certs/$hostname.pem certs/puppetdb.pem ; mv /etc/puppetlabs/puppet/ssl/* /srv/puppetssl/"
          env:
            - name: HOME
              value: /tmp
          volumeMounts:
            - mountPath: /run/secrets/autosign_psk
              name: secrets
              subPath: autosign_psk
            - mountPath: /etc/puppetlabs/puppet
              name: confdir
            - mountPath: /srv/puppetssl
              name: ssldir
        - name: {{ .Chart.Name }}-jmx-exporter
          image: camptocamp/jmx-exporter:0.12.0
          command: [ "cp", "/jmx_prometheus_javaagent-0.12.0.jar", "/jmx-exporter/" ]
          volumeMounts:
            - mountPath: /jmx-exporter
              name: jmx-exporter
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.puppetdb.image.repository }}:{{ .Values.puppetdb.image.tag }}"
          imagePullPolicy: {{ .Values.puppetdb.image.pullPolicy }}
          command: [ "java" ]
          args: [ "-Djava.net.preferIPv4Stack=true", "-Xms{{ .Values.puppetdb.java_mem_limit }}", "-Xmx{{ .Values.puppetdb.java_mem_limit }}",
            "-javaagent:/jmx-exporter/jmx_prometheus_javaagent-0.12.0.jar=9080:/jmx-exporter/config.yaml",
            "-cp", "/puppetdb.jar", "clojure.main",
            "-m", "puppetlabs.puppetdb.core", "services", "-c",
            "/etc/puppetlabs/puppetdb/conf.d/" ]
          ports:
            - name: http
              containerPort: 8081
              protocol: TCP
            - name: metrics
              containerPort: 9080
              protocol: TCP
          volumeMounts:
            - mountPath: /opt/puppetlabs/server/data/puppetdb
              name: data
            - mountPath: /etc/puppetlabs/puppetdb/conf.d/
              name: conf-d
            - mountPath: /etc/puppetlabs/puppet/ssl
              name: ssldir
            - mountPath: /etc/puppetlabs/puppetdb/pgsql/
              name: postgresql
            - mountPath: /jmx-exporter
              name: jmx-exporter
            - mountPath: /jmx-exporter/config.yaml
              name: jmx-exporter-config
              subPath: config.yaml
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - "curl --fail --resolve 'puppetdb:8080:127.0.0.1' 'http://puppetdb:8080/status/v1/services/puppetdb-status' | grep -q '\"state\":\"running\"'"
            initialDelaySeconds: 15
          resources:
            {{- toYaml .Values.puppetdb.resources | nindent 12 }}
      securityContext:
        supplementalGroups: [999]
      volumes:
        - name: jmx-exporter
          emptyDir: {}
        - name: data
          emptyDir: {}
        - name: confdir
          emptyDir: {}
        - name: ssldir
          emptyDir: {}
        - name: secrets
          secret:
            secretName: {{ include "puppetdb.fullname" . }}
        - name: conf-d
          configMap:
            name: {{ include "puppetdb.fullname" . }}
        - name: postgresql
          configMap:
            name: {{ include "puppetdb.fullname" . }}-postgresql
        - name: jmx-exporter-config
          configMap:
            name: {{ include "puppetdb.fullname" . }}-jmx-exporter
      {{- with .Values.puppetdb.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.puppetdb.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.puppetdb.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
