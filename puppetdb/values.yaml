# Default values for puppetdb.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

autosign:
  psk: ''

initContainersImage:
  # This image can be replaced by an open source version of the puppet agent with a higher version
  repository: puppet/puppet-agent
  tag: 7.20.0
  pullPolicy: IfNotPresent

securityContext:
  supplementalGroups: [999]

puppetdb:
  replicaCount: 1
  envs: []
  securityContext: {}
  image:
    # This image can be replaced by an open source version of the puppetdb
    repository: ghcr.io/voxpupuli/container-puppetdb
    tag: 8.8.1-latest
    pullPolicy: Always
    pullSecrets: []

  nameOverride: ""
  fullnameOverride: ""
  serviceAccountName: ""   # Service account used for the deployment
  puppetServerURL: puppetserver
  psk:
    existingSecret: ""     # the secret for the autosigning on the server side
  service:
    type: ClusterIP
    port: 8081

  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    paths: []
    hosts:
      - chart-example.local
    tls: []
    #  - secretName: chart-example-tls #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

  public_name: ''

  java_mem_limit: "256m"

  postgresql_cert: ""

  puppetdb_ini: |
    [global]
    vardir = /opt/puppetlabs/server/data/puppetdb

    [command-processing]

    [database]
    subname = //postgresql:5432/puppetdb
    username = puppetdb
    password = puppetdb

    [jetty]
    host = 127.0.0.1
    port = 8080
    ssl-host = 0.0.0.0
    ssl-port = 8081
    ssl-key = /etc/puppetlabs/puppet/ssl/private_keys/puppetdb.pem
    ssl-cert = /etc/puppetlabs/puppet/ssl/certs/puppetdb.pem
    ssl-ca-cert = /etc/puppetlabs/puppet/ssl/certs/ca.pem

    [nrepl]
    enabled = false
    port = 8082
    host = 127.0.0.1

  metrics_conf: |
    metrics: {
        # a server id that will be used as part of the namespace for metrics produced
        # by this server
        server-id: puppetdb
        registries: {
            puppetserver: {
                # specify metrics to allow in addition to those in the default list
                #metrics-allowed: ["compiler.compile.production"]

                reporters: {
                    # enable or disable JMX metrics reporter
                    jmx: {
                        enabled: true
                    }
                    # enable or disable Graphite metrics reporter
                    graphite: {
                        enabled: true
                    }
                }
            }
        }

        # this section is used to configure settings for reporters that will send
        # the metrics to various destinations for external viewing
        reporters: {
            graphite: {
                # graphite host
                host: "localhost"
                # graphite metrics port
                port: 2003
                # how often to send metrics to graphite
                update-interval-seconds: 5
            }
        }
        metrics-webservice: {
            jolokia: {
                # Enable or disable the Jolokia-based metrics/v2 endpoint.
                # Default is true.
                # enabled: false

                # Configure any of the settings listed at:
                #   https://jolokia.org/reference/html/agents.html#war-agent-installation
                servlet-init-params: {
                    # Specify a custom security policy:
                    #  https://jolokia.org/reference/html/security.html
                    policyLocation: "file:///etc/puppetlabs/puppetdb/jolokia-access.xml"
                    debug: "true"
                    allowErrorDetails: "false"
                }
            }
        }
    }

  jolokia_access: |
    <?xml version="1.0" encoding="utf-8"?>

    <restrict>
      <remote>
        <host>127.0.0.1</host>
      </remote>

      <commands>
        <command>read</command>
        <command>list</command>
        <command>version</command>
        <command>search</command>
      </commands>

      <mbean>
        <name>puppetlabs.puppetdb.population:name=num-nodes</name>
        <attribute mode="read">Value</attribute>
        <operation>objectName</operation>
      </mbean>
    </restrict>

  init:
    autosign:
      resources: {}

    jmx_exporter:
      resources: {}


prometheusPuppetdbExporter:
  enabled: true

  image:
    repository: docker.io/camptocamp/prometheus-puppetdb-exporter
    tag: latest
    pullPolicy: Always

  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 9121

  scrapeInterval: 5s
  reportMetricsCategories: "resources,time,changes,events"

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

  init:
    autosign:
      resources: {}
