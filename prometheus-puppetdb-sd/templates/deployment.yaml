apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "prometheus-puppetdb-sd.fullname" $ }}
  labels:
    {{- include "prometheus-puppetdb-sd.labels" $ | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "prometheus-puppetdb-sd.selector" $ | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "prometheus-puppetdb-sd.labels" $ | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "prometheus-puppetdb-sd.fullname" $ }}
      initContainers:
        - name: {{ .Chart.Name }}-autosign
          image: "docker.io/puppet/puppet-agent:7.14.0"
          command: ["sh", "-c"]
          args:
            - "psk=$(cat /run/secrets/autosign_psk); hostname=$(puppet config print certname | tr -d '\n'); echo \"custom_attributes:\n  1.2.840.113549.1.9.7: 'hashed;$(echo -n $psk/$hostname/puppetdb-sd/production | openssl dgst -binary -sha256 | openssl base64)'\nextension_requests:\n  pp_role: 'puppetdb-sd'\n  pp_environment: 'production'\" > /etc/puppetlabs/puppet/csr_attributes.yaml; puppet ssl submit_request --environment production --server {{ .Values.init.puppetserver }} --serverport {{ .Values.init.serverport }} --certificate_revocation=false --dns_alt_names='{{ include "prometheus-puppetdb-sd.fullname" . }}' --waitforcert 60 --confdir /etc/puppetlabs/puppet; cd /etc/puppetlabs/puppet/ssl && cp private_keys/$hostname.pem private_keys/puppetdb-sd.pem && cp certs/$hostname.pem certs/puppetdb-sd.pem ; mv /etc/puppetlabs/puppet/ssl/* /srv/puppetssl/"
          env:
            - name: HOME
              value: /tmp
          volumeMounts:
            - name: secrets
              mountPath: /run/secrets/autosign_psk
              subPath: autosign_psk
            - name: confdir
              mountPath: /etc/puppetlabs/puppet
            - name: ssldir
              mountPath: /srv/puppetssl
          resources:
            {{- toYaml .Values.init.autosign.resources | nindent 12 }}
      containers:
        - name: {{ $.Chart.Name }}
          image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          args:
          {{- if and (.Values.outputSecret.enabled) (not .Values.outputHttp.enabled) }}
            - --output.method=k8s-secret
            - --output.k8s-secret.secret-name={{ .Values.outputSecret.secretName }}
            - --output.k8s-secret.secret-key={{ .Values.outputSecret.secretKey }}
          {{- end }}
          {{- if and (.Values.outputHttp.enabled) (not .Values.outputSecret.enabled) }}
            - --output.method=http
          {{- end }}
            - --puppetdb.url={{ .Values.puppetdbUrl }}
            - --puppetdb.cert-file=/etc/puppetlabs/puppet/ssl/certs/puppetdb-sd.pem
            - --puppetdb.key-file=/etc/puppetlabs/puppet/ssl/private_keys/puppetdb-sd.pem
            - --puppetdb.cacert-file=/etc/puppetlabs/puppet/ssl/certs/ca.pem
        {{- if $.Values.env }}
          env:
            {{- toYaml $.Values.env | nindent 10 }}
        {{- end }}
          volumeMounts:
            - name: ssldir
              mountPath: /etc/puppetlabs/puppet/ssl
          resources:
            {{- toYaml $.Values.resources | nindent 12 }}
    {{- with $.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with $.Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with $.Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        {{- if or (.Values.init.psk) (.Values.init.pskExistingSecret)  }}
        - name: secrets
          secret:
            secretName:  {{ .Values.init.pskExistingSecret | default (include "prometheus-puppetdb-sd.fullname" .) }}
        {{- end }}
        - name: ssldir
          emptyDir: {}
        - name: confdir
          emptyDir: {}
