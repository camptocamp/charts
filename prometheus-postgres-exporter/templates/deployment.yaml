---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "prometheus-postgres-exporter.fullname" . }}-master
  labels:
{{ include "prometheus-postgres-exporter.labels" $ | indent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "prometheus-postgres-exporter.selector" $ | nindent 6 }}
      pginstance: master
  template:
    metadata:
      labels:
        {{- include "prometheus-postgres-exporter.selector" $ | nindent 8 }}
        {{- .Values.additionalLabels | toYaml | nindent 8 }}
        pginstance: master
        config-hash: {{ include "prometheus-postgres-exporter.confighash" (merge (dict "role" "master") $) | quote }}
    spec:
      affinity: {{ toYaml .Values.affinity | nindent 8 }}
      containers:
        - name: exporter
          image: {{ $.Values.image.repository }}:{{ $.Values.image.tag }}
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          {{- if $.Values.extraArgs }}
          args:
          {{- range $.Values.extraArgs  }}
            - {{ . }}
          {{- end }}
          {{- end }}
          env:
            {{- if $.Values.auto_discover_databases }}
            - name: PG_EXPORTER_AUTO_DISCOVER_DATABASES
              value: "true"
            {{- end }}
            - name: DATA_SOURCE_USER
            {{- if hasKey $.Values "usernameSecret" }}
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.usernameSecret.name }}
                  key: {{ $.Values.usernameSecret.key }}
            {{- else }}
              value: "{{ .Values.username }}{{ if $.Values.azure }}@{{ (split ":" $.Values.master)._0 }}{{ end }}"
            {{- end }}
            - name: DATA_SOURCE_PASS
            {{- if hasKey $.Values "passwordSecret" }}
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.passwordSecret.name }}
                  key: {{ $.Values.passwordSecret.key }}
            {{- else }}
              value: {{ .Values.password | quote }}
            {{- end }}
            - name: DATA_SOURCE_URI
              value: {{ .Values.master | quote }}
            - name: PG_EXPORTER_EXCLUDE_DATABASES
              value: {{ $.Values.exclude_databases | quote }}
            - name: PG_EXPORTER_INCLUDE_DATABASES
              value: {{ $.Values.include_databases | quote }}
            - name: PG_EXPORTER_EXTEND_QUERY_PATH
              value: /etc/prometheus-postgres-exporter/queries.yaml
          ports:
            - name: metrics
              containerPort: 9187
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /etc/prometheus-postgres-exporter/
      volumes:
        - name: config
          configMap:
            name: {{ include "prometheus-postgres-exporter.fullname" . }}-master
{{$root := .}}
{{- range $index, $replica := .Values.replicas }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "prometheus-postgres-exporter.fullname" $root }}-replica{{ $index }}
  labels:
{{ include "prometheus-postgres-exporter.labels" $root | indent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "prometheus-postgres-exporter.selector" $ | nindent 6 }}
      pginstance: replica{{ $index }}
  template:
    metadata:
      labels:
        {{- include "prometheus-postgres-exporter.selector" $root | nindent 8 }}
        {{- $root.Values.additionalLabels | toYaml | nindent 8 }}
        pginstance: replica{{ $index }}
        config-hash: {{ include "prometheus-postgres-exporter.confighash" (merge (dict "role" "replica") $) | quote }}
    spec:
      affinity: {{ toYaml .Values.affinity | nindent 8 }}
      containers:
        - name: exporter
          image: {{ $.Values.image.repository }}:{{ $.Values.image.tag }}
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          {{- if $.Values.extraArgs }}
          args:
          {{- range $.Values.extraArgs  }}
            - {{ . }}
          {{- end }}
          {{- end }}
          env:
            {{- if $.Values.auto_discover_databases }}
            - name: PG_EXPORTER_AUTO_DISCOVER_DATABASES
              value: "true"
            {{- end }}
            - name: DATA_SOURCE_USER
            {{- if hasKey $.Values "usernameSecret" }}
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.usernameSecret.name }}
                  key: {{ $.Values.usernameSecret.key }}
            {{- else }}
              value: "{{ $.Values.username }}{{ if $.Values.azure }}@{{ (split ":" $replica)._0 }}{{ end }}"
            {{- end }}
            - name: DATA_SOURCE_PASS
            {{- if hasKey $.Values "passwordSecret" }}
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.passwordSecret.name }}
                  key: {{ $.Values.passwordSecret.key }}
            {{- else }}
              value: {{ $.Values.password | quote }}
            {{- end }}
            - name: DATA_SOURCE_URI
              value: {{ $replica | quote }}
            - name: PG_EXPORTER_EXCLUDE_DATABASES
              value: {{ $.Values.exclude_databases | quote }}
            - name: PG_EXPORTER_INCLUDE_DATABASES
              value: {{ $.Values.include_databases | quote }}
            - name: PG_EXPORTER_EXTEND_QUERY_PATH
              value: /etc/prometheus-postgres-exporter/queries.yaml
          ports:
            - name: metrics
              containerPort: 9187
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /etc/prometheus-postgres-exporter/
      volumes:
        - name: config
          configMap:
            name: {{ include "prometheus-postgres-exporter.fullname" $root }}-replica
{{- end }}
